{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./components/Home\";\nimport Settings from \"./components/Settings\";\nimport * as Font from 'expo-font';\nimport { useState, useEffect } from 'react';\nimport MychatScreen from \"./components/Map\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontLoaded = _useState2[0],\n    setFontLoaded = _useState2[1];\n  useEffect(function () {\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n    function _loadFonts() {\n      _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          YourFontName: require(\"./assets/fonts/IBMPlexSansKR-SemiBold.ttf\")\n        });\n        setFontLoaded(true);\n      });\n      return _loadFonts.apply(this, arguments);\n    }\n    loadFonts();\n  }, []);\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Loading\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"MychatScreen\",\n        component: MychatScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: Settings\n      })]\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createStackNavigator","Home","Settings","Font","useState","useEffect","MychatScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","fontLoaded","setFontLoaded","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","YourFontName","require","children","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["D:/pc/pc-git/Peace_FrontEnd/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from './components/Home';\r\nimport Settings from './components/Settings';\r\nimport * as Font from 'expo-font';\r\nimport { useState, useEffect } from 'react';\r\nimport MychatScreen from './components/Map';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  const [fontLoaded, setFontLoaded] = useState(false);\r\n  useEffect(() => {\r\n    async function loadFonts() {\r\n      await Font.loadAsync({\r\n        YourFontName: require('./assets/fonts/IBMPlexSansKR-SemiBold.ttf'), // 경로와 파일명 변경\r\n      });\r\n\r\n      setFontLoaded(true);\r\n    }\r\n    loadFonts();\r\n  }, []);\r\n  if (!fontLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Loading\">\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={Home}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen name=\"MychatScreen\" component={MychatScreen} />\r\n        <Stack.Screen name=\"Settings\" component={Settings} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,KAAK,GAAGX,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASY,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAoCT,QAAQ,CAAC,KAAK,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChCT,SAAS,CAAC,YAAM;IAAA,SACCa,SAASA,CAAA;MAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,WAAA;MAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;QACzB,MAAMnB,IAAI,CAACoB,SAAS,CAAC;UACnBC,YAAY,EAAEC,OAAO,4CAA4C;QACnE,CAAC,CAAC;QAEFR,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC;MAAA,OAAAE,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,IAAI,CAACF,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,OACER,IAAA,CAACT,mBAAmB;IAAA2B,QAAA,EAClBhB,KAAA,CAACC,KAAK,CAACgB,SAAS;MAACC,gBAAgB,EAAC,SAAS;MAAAF,QAAA,GACzClB,IAAA,CAACG,KAAK,CAACkB,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAE9B,IAAK;QAChB+B,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC,EACFzB,IAAA,CAACG,KAAK,CAACkB,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEzB;MAAa,CAAE,CAAC,EAC7DE,IAAA,CAACG,KAAK,CAACkB,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAE7B;MAAS,CAAE,CAAC;IAAA,CACtC;EAAC,CACC,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}